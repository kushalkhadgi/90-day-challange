#include <iostream>
#include <string>
using namespace std;

bool search(char mat[][256], int row, int col, string input, int i, int j, bool check[][256], int index = 0) {
    if(index >= input.length())
    {
        return true;
    }

    if(mat[i+1][j] == input[++index] && i+1 < row && i+1 >= 0)
    {
        if(!check[i+1][j])
        {
            check[i+1][j] = 1;
            return search(mat, row, col, input, i+1, j, check, index);
        }
    }
    if(mat[i-1][j] == input[++index] && i-1 < row && i-1 >= 0)
    {
        if(!check[i+1][j])
        {
            check[i-1][j] = 1;
            return search(mat, row, col, input, i-1, j, check, index);
        }
    }

    if(mat[i][j+1] == input[++index] && j+1 < col && j+1 >= 0)
    {
        if(!check[i][j+1])
        {
            check[i][j+1] = 1;
            return search(mat, row, col, input, i, j+1, check, index);
        }
    }
    if(mat[i][j-1] == input[++index] && j-1 < col && j-1 >= 0)
    {
        if(!check[i][j-1])
        {
            check[i][j-1] = 1;
            return search(mat, row, col, input, i, j-1, check, index);
        }
    }
    if(index >= input.length())
    {
        return true;
    }
    return false;
}

int main() {
    int row, col;
    cout << "Enter rows and columns: ";
    cin >> row >> col;

    char mat[256][256];
    cout << "Enter the matrix:" << endl;
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            cin >> mat[i][j];
        }
    }

    bool check[256][256] = {false};

    string input;
    cout << "Enter the string to check: ";
    cin >> input;
    
    bool anwer = 0;
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            if(input[0] == mat[i][j]) {
                check[i][j] = 1;
                // search(mat, row, col, input, i, j, check);
                anwer = (search(mat, row, col, input, i, j, check));
            }
        }
    }
    if(anwer)
    {
        cout<<"TRUE";
        return 0;
    }
    cout<<"FALSE";
    return 0;
}


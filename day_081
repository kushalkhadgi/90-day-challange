#include <iostream>
using namespace std;

int partition(int *array, int start, int end)
{
    int pivot = array[start];
    int count = 0;

    for(int i=start + 1; i<=end; i++)
    {
        if(array[i] <= pivot)
        {
            count++;
        }
    }
    int pivotindex = start + count;
    swap(array[pivotindex], array[start]);

    int i = start, j = end;

    while(i < pivotindex && j > pivotindex){
        while(array[i] <= pivot)
        {
            i++;
        }
        while(array[j] > pivot)
        {
            j--;
        }

        if(i < pivotindex && j > pivotindex)
        {
            swap(array[i++], array[j--]);
        }
    }
    return pivotindex;
}

void quicksort(int array[], int start, int end)
{
    if(start >= end)
        return;


    int pivotindex = partition(array, start, end);

    quicksort(array, start, pivotindex - 1);
    quicksort(array, pivotindex + 1, end);
}

int main()
{
    // int array[10] = {32,34,32,532,54,64,24,85,74,4};
    int array[12] = {3,7,0,1,5,8,3,2,34,66,87,23};
    int start = 0; 
    int end = sizeof(array) / sizeof(array[5]);

    quicksort(array, start, end-1);

    for(int i=0; i<end; i++)
    {
        cout<<array[i]<<" ";
    }

    return 0;
}
